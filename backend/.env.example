NODE_ENV=development
PORT=3000

PG_PORT=5432
PG_HOST=localhost

PG_DB=fe_db
PG_USER=fe_admin
PG_PASSWORD=fe_admin

REDIS_PORT=6379
REDIS_HOST=localhost
REDIS_PASSWORD=password

DB_ENABLE_LOGGING=true
HTTP_ENABLE_LOGGING=true

LOG_LEVEL=info

# value in 'vercel/ms' module format.
# (this module is used to parse the value)
# See more: https://www.npmjs.com/package/ms
#
SESSION_REFRESH_INTERVAL=15m
SESSION_EXPIRES_IN=30d

BCRYPT_SALT_ROUNDS=10

SECURE_COOKIE=false

# WARN: uses in prod env only.
#
# Indicates the app is behind a front-facing proxy, or series of proxies.
# When enabled, the app will attempt to determine client connection details
# from X-Forwarded-* headers. For example, the IP address of the client,
# protocol he uses to speak to proxy etc. The app is going to trust these
# headers.
# Value of this var determine, how many proxies (that set these headers)
# the app should trust. Be careful setting this value, since any untrusted
# client could easily counterfeit any of the headers.
#
# Var could take:
#   1) boolean - trust (or not) all of proxies (not recommended);
#   2) number  - number of proxies to trust;
#   3) string  - address or array of addresses to trust.
# Read more: http://expressjs.com/en/4x/api.html#trust.proxy.options.table
#
# In case of using proxies trust proxy is required to get secure cookies
# working properly. You should know the actual protocol client uses
# to communicate with proxy, not the protocol that is using between proxy
# and app.
#
TRUST_PROXY=1

#
# Cleaning job settings
# (delete expired sessions from redis)
#

# Cron pattern to run the job.
# 'node-cron' module is used.
# To see supported options, visit: https://www.npmjs.com/package/node-cron
#
CLEAN_JOB_PATTERN=*/15 * * * *

CLEAN_JOB_BUNCH_SIZE=1000

# value in 'vercel/ms' module format.
# (this module is used to parse the value)
# See more: https://www.npmjs.com/package/node-cron
#
CLEAN_JOB_INTERVAL=1s
